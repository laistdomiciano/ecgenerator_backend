openapi: 3.0.0
info:
  title: Employment Contract Management API (EC-Generator)
  description: API to manage users, employees, contracts, etc.
  version: 1.0.0
servers:
  - url: https://ecgenerator-backend.onrender.com
    description: Production Server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /login:
    post:
      summary: Logs a user into the system
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
        '400':
          description: Content-Type must be application/json or missing required fields
        '401':
          description: Invalid username or password

  /signup:
    post:
      summary: Registers a new user
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password1:
                  type: string
                password2:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid request or passwords mismatch
        '409':
          description: Username or email already exists

  /create_employee:
    post:
      summary: Creates a new employee
      security:
        - bearerAuth: []
      requestBody:
        description: Employee details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_name:
                  type: string
                company_name:
                  type: string
                start_date:
                  type: string
                job_title:
                  type: string
                job_responsibilities:
                  type: string
                salary:
                  type: number
                benefits:
                  type: string
                work_hours:
                  type: number
                leave_days:
                  type: number
                notice_period:
                  type: string
                hourly_rate:
                  type: number
                number_of_hours:
                  type: number
                description_of_services:
                  type: string
                fee_amount:
                  type: number
                payment_schedule:
                  type: string
                ownership_terms:
                  type: string
                company_representative:
                  type: string
                client_representative:
                  type: string
      responses:
        '201':
          description: Employee created successfully
        '400':
          description: Missing required field or invalid input
        '401':
          description: Unauthorized
        '409':
          description: Employee already exists
        '500':
          description: Server error

  /update_user/{user_id}:
    put:
      summary: Updates a user by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: User ID
      requestBody:
        description: Updated user details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Invalid request or no data provided
        '401':
          description: User not found
        '500':
          description: Server error

  /get_contract_types:
    get:
      summary: Get list of contract types
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of contract types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    template:
                      type: string
        '404':
          description: No contract types found

  /employees_wo_contract:
    get:
      summary: Get employees without contracts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of employees without contracts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    employee_name:
                      type: string
        '404':
          description: No employees found

  /create_contract/{contract_type_id}/{employee_id}:
    post:
      summary: Creates a contract for an employee based on the contract type
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: contract_type_id
          schema:
            type: integer
          required: true
          description: Contract Type ID
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
          description: Employee ID
      responses:
        '201':
          description: Contract created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  contract_id:
                    type: integer
                  pdf_url:
                    type: string
        '400':
          description: Missing or incorrect data for contract template
        '404':
          description: Invalid contract type or employee ID
        '500':
          description: Server error

  /update_employee/{employee_id}:
    put:
      summary: Updates an employee by ID (route not implemented yet)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: employee_id
          schema:
            type: integer
          required: true
          description: Employee ID
      responses:
        '501':
          description: Not implemented yet